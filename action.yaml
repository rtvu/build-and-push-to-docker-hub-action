name: 'Build and Push to Docker Hub Action'
description: 'GitHub Action to build container image and push to Docker Hub.'
author: 'rtvu'

branding:
  icon: 'upload'
  color: 'gray-dark'

inputs:
  image:
    description: 'Name of image with format <OWNER>/<IMAGE>'
    default: ${{ github.repository }}
  latest:
    description: 'Include latest tag'
    default: false
  platforms:
    description: 'Comma separated list of target platforms'
    required: true
  tags:
    description: 'Comma separated list of tags for image'
    required: true
  token:
    description: 'Docker Hub token'
    required: true
  username:
    description: 'Docker Hub username'
    required: true

runs:
  using: 'composite'
  steps:
    -
      name: 'Format tags'
      id: format-tags
      shell: python3 -u {0} ${{ inputs.latest && '--latest' || '--no-latest' }} ${{ inputs.image }} ${{ inputs.tags }}
      run: |
        import argparse
        import os

        def convert_tags(image, tags, latest):
            tags = tags.split(',')
            if latest:
                tags.append('latest')
            tags = map(lambda tag : f'{image}:{tag.strip()}', tags)
            tags = ','.join(tags)

            output_path = os.getenv('GITHUB_OUTPUT')
            with open(output_path, 'a') as output:
                output.write(f'tags={tags}')

        def main():
            parser = argparse.ArgumentParser()
            parser.add_argument("--latest", action=argparse.BooleanOptionalAction, default=False, help='Include latest tag')
            parser.add_argument('image', type=str, help='Name of image with format <OWNER>/<IMAGE>')
            parser.add_argument('tags', type=str, help='Comma separated list of tags for image')
            args = parser.parse_args()
            convert_tags(image=args.image, tags=args.tags, latest=args.latest)

        if __name__ == '__main__':
            main()
    -
      name: 'Set up QEMU'
      uses: docker/setup-qemu-action@v3
    -
      name: 'Set up buildx'
      uses: docker/setup-buildx-action@v3
    -
      name: 'Login to Docker Hub'
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.token }}
    -
      name: 'Build and push to Docker Hub'
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: ${{ inputs.platforms }}
        push: true
        tags: ${{ steps.format-tags.outputs.tags }}
